generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOWDB_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String?
  userId   String? @unique
  username String? @unique
  tasks    Task[]

  @@unique([userId, username])
}

model Task {
  id          Int    @id @default(autoincrement())
  description String
  users       User[]
}

model Jar {
  id          String    @id
  sendId      String
  title       String
  description String
  balance     Int
  goal        Int
  JarUser     JarUser[]
}

model JarUser {
  id           Int      @id @default(autoincrement())
  name         String   @unique
  fulfilled    Boolean  @default(false)
  moneyGoal    Int
  moneySent    Int      @default(0)
  jarId        String
  jar          Jar      @relation(fields: [jarId], references: [id])
  statementIds String[]
}

model List {
  id        Int        @id @default(autoincrement())
  title     String     @unique
  updatedAt DateTime   @default(now()) @updatedAt
  cells     ListCell[]
}

model ListCell {
  id          Int     @id @default(autoincrement())
  list        List    @relation(fields: [listTitle], references: [title], onDelete: Cascade)
  listTitle   String
  item        String
  description String?
  isDone      Boolean @default(false)
  assignee    String?
}
